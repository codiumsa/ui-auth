!function(){"use strict";angular.module("ui.auth",["ui"]),angular.module("ui.auth.directives",[]),angular.module("ui.auth.services",[])}(),function(){"use strict";function e(e,r){return{restrict:"A",link:function(t,n,i){var s,o,a=void 0!==i.permissions||void 0!==i.requiresLogin,u=e.isLoggedIn(),c=a&&!u;i.whenLogin&&(c=u?"hide"===i.whenLogin:"show"===i.whenLogin),i.permissions&&(s=i.permissions.split(",")),s&&(c=!r.hasPermissions(s)),i.anyPermissions&&(o=i.anyPermissions.split(","),c=!r.hasAnyPermissions(o)),c&&n.remove()}}}angular.module("ui.auth.directives").directive("auth",e),e.$inject=["AuthenticationService","AuthorizationService"]}(),function(){"use strict";function e(e,r,t,n){var i=e(n.serverURL+"/:action",{action:"@action"});return{login:function(e,r){var t=new i({username:e,password:r});return t.$save({action:"login"})},token:function(e){var r=new i({username:e.username,accessToken:e.accessToken});return r.$save({action:"token"})},logout:function(){var e=this.getCurrentUser(),t=new i({username:e.username,accessToken:e.accessToken});return r.AuthParams={},localStorage.removeItem(n.authParamsKey),t.$save({action:"logout"})},getCurrentUser:function(){var e=r.AuthParams;return e&&0!==Object.keys(e).length||(e=JSON.parse(localStorage.getItem(n.authParamsKey))||void 0,e&&(t.defaults.headers.common.Authorization="Bearer "+e.accessToken)),e},isLoggedIn:function(){var e=this.getCurrentUser();return e&&void 0!==e.accessToken}}}angular.module("ui.auth.services").service("AuthenticationService",e),e.$injec=["$resource","$rootScope","$http","Config"]}(),function(){"use strict";function e(e,r,t,n,i){var s=r(i.serverURL+"/authorization/:action",{action:"@action"});return{hasPermission:function(e,r){var t=r||n.getCurrentUser(),i=[];return t&&(i=t.permissions||[]),i.indexOf(e.trim())>=0},hasPermissions:function(e,r){for(var t=this,n=!0,i=0;i<e.length;i++)if(!t.hasPermission(e[i],r)){n=!1;break}return n},hasAnyPermissions:function(e,r){var t=this;return _.some(e,function(e){return t.hasPermission(e,r)})},hasRol:function(e,r){var t=r||n.getCurrentUser(),i=[];return t&&(i=t.rols||[]),i.indexOf(e.trim())>=0},principal:function(){return s.get({action:"principal"}).$promise},setupCredentials:function(r,n,s,o){var a={username:r,requestToken:n,accessToken:s};e.AuthParams=a,localStorage.setItem(i.authParamsKey,JSON.stringify(a)),t.defaults.headers.common.Authorization="Bearer "+s,this.principal().then(function(e){a.permissions=e.permisos,a.rols=e.roles,a.stamp=e.stamp,localStorage.setItem(i.authParamsKey,JSON.stringify(a)),o(a)})},authorize:function(e,r){var t=n.getCurrentUser();if(e===!0&&void 0===t)return this.enums.LOGIN_REQUIRED;if(e&&void 0!==t&&(void 0===r||0===r.length))return this.enums.AUTHORIZED;if(r){var i=this.hasPermissions(r,t);return i?this.enums.AUTHORIZED:this.enums.NOT_AUTHORIZED}},enums:{LOGIN_REQUIRED:"loginRequired",NOT_AUTHORIZED:"notAuthorized",AUTHORIZED:"authorized"}}}angular.module("ui.auth.services").service("AuthorizationService",e),e.$inject=["$rootScope","$resource","$http","AuthenticationService","Config"]}(),function(){"use strict";function e(e,r,t,n){return{request:function(e){return"/ingresar"!==r.path()&&t.AuthParams&&(e.headers.Authorization="Bearer "+t.AuthParams.accessToken),e},requestError:function(t){return 401===t.status&&r.path("/ingresar"),e.reject(t)},response:function(e){return e},responseError:function(i){var s=n.get("ngNotify"),o=n.get("Config"),a=n.get("$window");if(500===i.status&&"POST"===i.config.method&&i.config.url.endsWith("rest/token")&&(localStorage.removeItem(o.authParamsKey),r.path("/"),a.location.reload()),401===i.status){if(i.data&&403===i.data.code)return s.set(i.data.error,"error"),r.path("/"),e.reject(i);if("/ingresar"===r.path())return e.reject(i);var u=e.defer(),c=n.get("AuthenticationService"),h=n.get("$http");console.log(t.AuthParams);var m=c.token(t.AuthParams);return m.then(function(e){t.AuthParams.accessToken=e.accessToken,localStorage.setItem(o.authParamsKey,JSON.stringify(t.AuthParams)),h.defaults.headers.common.Authorization="Bearer "+e.accessToken}).then(u.resolve,u.reject),u.promise.then(function(){return i.config.headers.Authorization="Bearer "+t.AuthParams.accessToken,h(i.config)})}return e.reject(i)}}}angular.module("ui.auth.services").factory("HttpInterceptor",e),e.$inject=["$q","$location","$rootScope","$injector"]}();