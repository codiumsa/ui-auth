"use strict";!function(){angular.module("ui.auth.services",[]),angular.module("ui.auth.directives",["ui.auth.services"]),angular.module("ui.auth",["ngResource","ui.auth.services","ui.auth.directives"])}(),function(){function e(e,r,t){function n(e,r){var t=new a({grantType:"password",username:e,password:r}),n=t.$save();return n.then(u),n}function i(e){var r=new a({grantType:"refresh_token",refreshToken:e}),t=r.$save();return t.then(u),t}function o(){var t=e(r.serverURL+"/oauth/user");return t.get().$promise}function s(){var e=t.get("CurrentUserService");return e.isLoggedIn()}function u(e){localStorage.setItem(r.preffix,JSON.stringify(e))}var a=e(r.serverURL+"/oauth/token");return{login:n,refresh:i,fetchCurrentUser:o,isLoggedIn:s}}angular.module("ui.auth.services").factory("AuthenticationService",e),e.$inject=["$resource","AuthConfig","$injector"]}(),function(){function e(e,r,t){e(r.serverURL+"/authorization/:action",{action:"@action"});return{hasPermission:function(e){var r=t.get("CurrentUserService"),n=r.getPermissions();return n.indexOf(e.trim())>=0},hasPermissions:function(e){for(var r=!0,t=0;t<e.length;t++)if(!this.hasPermission(e[t])){r=!1;break}return r},hasSomePermissions:function(e){var r=this;return _.some(e,function(e){return r.hasPermission(e)})},hasRol:function(e){var r=t.get("CurrentUserService"),n=r.getRols();return n.indexOf(e.trim())>=0},authorize:function(e,r){var n=t.get("CurrentUserService");if(e===!0&&void 0===user)return this.enums.LOGIN_REQUIRED;if(e&&n.isLoggedIn()&&(void 0===r||0===r.length))return this.enums.AUTHORIZED;if(r){var i=this.hasPermissions(r);return i?this.enums.AUTHORIZED:this.enums.NOT_AUTHORIZED}},enums:{LOGIN_REQUIRED:"loginRequired",NOT_AUTHORIZED:"notAuthorized",AUTHORIZED:"authorized"}}}angular.module("ui.auth.services").factory("AuthorizationService",e),e.$inject=["$resource","AuthConfig","$injector"]}(),function(){angular.module("ui.auth.services").provider("AuthConfig",function(){var e={};this.config=function(r){angular.extend(e,r)},this.$get=[function(){return e}]})}(),function(){function e(e,r,t){return{request:function(e){var r=t.get("TokenService"),n=r.getToken();return n&&(e.headers.Authorization="Bearer "+n),e.headers["Content-Type"]="application/json",e},requestError:function(n){var i=t.get("AuthConfig");return 401===n.status&&r.path(i.loginPath),e.reject(n)},response:function(e){return e},responseError:function(n){var i=t.get("AuthConfig"),o=t.get("$window"),s=t.get("$http");if(500===n.status&&"POST"===n.config.method&&n.config.url===i.serverURL+"/token"&&(r.path(i.loginPath),o.location.reload()),401===n.status){if(n.data&&403===n.data.code)return r.path("/"),e.reject(n);if(r.path()===i.loginPath)return e.reject(n);var u=e.defer(),a=t.get("AuthenticationService"),c=t.get("TokenService"),h=a.refresh(c.getRefreshToken());return h.then(function(e){return c.setToken(e),e}),h.then(u.resolve,u.reject),u.promise.then(function(){return s(n.config)})}return e.reject(n)}}}angular.module("ui.auth.services").factory("HttpInterceptor",e),e.$inject=["$q","$location","$injector"]}(),function(){function e(e,r){return{restrict:"A",link:function(t,n,i){var o,s,u=void 0!==i.permissions||void 0!==i.requiresLogin,a=e.isLoggedIn(),c=u&&!a;i.whenLogin&&(c=a?"hide"===i.whenLogin:"show"===i.whenLogin),i.permissions&&(o=i.permissions.split(",")),o&&(c=!r.hasPermissions(o)),i.somePermissions&&(s=i.somePermissions.split(","),c=!r.hasSomePermissions(s)),c&&n.remove()}}}angular.module("ui.auth.directives").directive("auth",e),e.$inject=["AuthenticationService","AuthorizationService"]}();